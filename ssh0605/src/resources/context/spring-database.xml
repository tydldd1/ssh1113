<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<!-- 配置HibernateSessionFactory的资源文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 基本数据库配置 -->
				<value>classpath*:resources/config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
	    <property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" /> 
		
		
		<!--连接池中保留的最小连接数。-->            
	    <property name="minPoolSize" value="10" />        
	    <!--连接池中保留的最大连接数。Default: 15 -->         
	    <property name="maxPoolSize" value="100" />        
	    <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->               
	    <property name="maxIdleTime" value="1800" />        
	    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->               
	    <property name="acquireIncrement" value="3" />         
	    <property name="maxStatements" value="1000" />          
	    <property name="initialPoolSize" value="10" />          
	    <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->       
	    <property name="idleConnectionTestPeriod" value="60" />          
	    <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->       
	    <property name="acquireRetryAttempts" value="30" />          
	    <property name="breakAfterAcquireFailure" value="true" />              
	    <property name="testConnectionOnCheckout" value="false" /> 
		
		
	</bean>
		
	
		
	<!--定义了Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>com/ru/ssh/login/entity/User.hbm.xml</value>
				<value>com/ru/ssh/hibernate/entity/Person.hbm.xml</value>
				<value>com/ru/ssh/hibernate/entity/Address.hbm.xml</value>
				<value>com/ru/ssh/JSOperate/entity/Student.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.hbm2ddl.auto">
					${hibernate.hbm2ddl.auto}
				</prop>
				<!-- 每隔100笔资料送入资料库，清除缓存（定期清除缓存，减小压力） -->
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.batch_size}
				</prop>
				<!-- 一次读的数据库记录数 -->
				<prop key="jdbc.fetch_size">
					${hibernate.fetch_size}
				</prop>
				<!-- 二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- 统计二级缓存 ,默认关闭，会消耗一定资源-->
				<prop key="hibernate.generate_statistics">true</prop>
		</props>
		</property>
	</bean>

	<!-- 配置Hibernate的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	 <!-- 采用注解配置事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- hibernate帮助类 -->
    <bean id="basicHibernate" class="com.ru.ssh.base.hibernateUtil" abstract="true">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
</beans>